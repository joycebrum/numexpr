name: Build

on: [push, pull_request]

permissions:
  contents: read

env:
  CIBW_BEFORE_BUILD: pip install setuptools oldest-supported-numpy
  CIBW_BUILD_VERBOSITY: 3
  # CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: python -c "import sys, numexpr; sys.exit(0 if numexpr.test().wasSuccessful() else 1)"
  CIBW_TEST_SKIP: "*macosx*arm64*"
  CIBW_SKIP: "*musllinux*"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }} - ${{ matrix.p_ver }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      CIBW_BUILD: ${{ matrix.cibw_build }}
      CIBW_ARCHS_LINUX: ${{ matrix.arch }}
      CIBW_ARCHS_MACOS: ${{ matrix.arch }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [auto64]
        cibw_build: ["cp3{7,8,9,10,11}-*"]
        p_ver: ["3.7-3.11"]
        include:
          - arch: arm64
            os: macos-latest
            cibw_build: "cp3{7,8,9,10,11}-*"
            p_ver: "3.7-3.11"
          - arch: aarch64
            os: ubuntu-latest
            cibw_build: "cp37*"
            p_ver: "3.7"
          - arch: aarch64
            os: ubuntu-latest
            cibw_build: "cp38*"
            p_ver: "3.8"
          - arch: aarch64
            os: ubuntu-latest
            cibw_build: "cp39*"
            p_ver: "3.9"
          - arch: aarch64
            os: ubuntu-latest
            cibw_build: "cp310*"
            p_ver: "3.10"
          - arch: aarch64
            os: ubuntu-latest
            cibw_build: "cp311*"
            p_ver: "3.11"

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - uses: actions/setup-python@3542bca2639a428e1796aaa6a2ffef0c0f575566 # v3.1.4
        name: Install Python
        with:
          python-version: '3.x'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
        if: ${{ matrix.arch == 'aarch64' }}
        name: Set up QEMU
      
      - name: Build wheels for Python
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      
      - name: Make sdist
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          python -m pip install build
          python -m build --sdist --outdir wheelhouse .

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          path: ./wheelhouse/*

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: wheelhouse/*
